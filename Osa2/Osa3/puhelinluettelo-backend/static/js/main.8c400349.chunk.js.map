{"version":3,"sources":["components/Person.js","components/Contacts.js","components/PersonForm.js","services/persons.js","components/Notification.js","components/ErrorNotif.js","App.js","index.js"],"names":["Person","person","deletePerson","name","number","onClick","Contacts","list","filter","toLowerCase","indexOf","map","id","PersonForm","props","onSubmit","value","valueName","onChange","onNameChange","valueNumber","onNumberChange","type","baseUrl","axios","get","then","response","data","newObject","post","console","log","delete","put","Notification","message","className","ErrorNotif","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","successMessage","setSuccessMessage","errorMessage","setErrorMessage","useEffect","personService","initialPerson","event","target","preventDefault","personObject","some","p","find","val","window","confirm","returnedPerson","pe","setTimeout","catch","error","concat","msg","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8c400349.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst Person = ({person, deletePerson}) => {\r\n\r\n    return (\r\n        <p>\r\n            {person.name} {person.number} <button onClick={deletePerson}>Poista</button>\r\n        </p>\r\n    )\r\n}\r\n\r\nexport default Person","import React from 'react'\r\nimport Person from './Person'\r\n\r\nconst Contacts = ({list, filter, deletePerson}) => {\r\n    \r\n    let filtered = []\r\n    \r\n    if(filter !== ''){\r\n        filtered = list.filter(person => person.name.toLowerCase().indexOf(filter.toLowerCase()) !== -1)\r\n    }\r\n    else{\r\n        filtered = list\r\n    }\r\n    \r\n    return (\r\n\r\n        filtered.map(person => {\r\n            return(\r\n            <Person key={person.id} person={person} deletePerson={() => deletePerson(person.id, person.name)} />\r\n            )\r\n        })\r\n        \r\n        //<Person list={filtered} />\r\n    )\r\n}\r\n\r\nexport default Contacts","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n    return (\r\n        \r\n        <form onSubmit = {props.onSubmit}>\r\n            <div>\r\n                name:   <input \r\n                            value = {props.valueName}\r\n                            onChange = {props.onNameChange}\r\n                        />\r\n            </div>\r\n            <div>\r\n                number: <input\r\n                            value = {props.valueNumber}\r\n                            onChange = {props.onNumberChange}\r\n                        />\r\n            </div>\r\n            <div>\r\n                <button type='submit'>Add</button>\r\n            </div>\r\n        </form>\r\n            \r\n    )\r\n}\r\n\r\nexport default PersonForm","import axios from 'axios'\r\n\r\nconst baseUrl = 'https://intense-savannah-81450.herokuapp.com/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = (newObject) => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => {\r\n        console.log(response)\r\n        return response.data\r\n    })\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAll, create, remove, update}","import React from 'react'\r\n\r\nconst Notification = ({message}) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"success\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\n\r\nconst ErrorNotif = ({message}) => {\r\n    if (message === null){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"error\">\r\n            {message}\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default ErrorNotif","import React, {useState, useEffect} from 'react'\r\nimport Contacts from './components/Contacts'\r\nimport PersonForm from './components/PersonForm'\r\nimport personService from './services/persons'\r\nimport Notification from './components/Notification'\r\nimport ErrorNotif from './components/ErrorNotif'\r\n\r\n\r\nconst App = () => {\r\n    const [person, setPersons] = useState([])\r\n    const [newName, setNewName] = useState('')\r\n    const [newNumber, setNewNumber] = useState('')\r\n    const [newFilter, setNewFilter] = useState('')\r\n    const [successMessage, setSuccessMessage] = useState(null)\r\n    const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n    useEffect(() => {\r\n        personService\r\n        .getAll()\r\n            .then(initialPerson =>{\r\n                setPersons(initialPerson)\r\n            })\r\n    }, [])\r\n    \r\n\r\n    const addPerson = (event) => {\r\n        event.preventDefault()\r\n\r\n        const personObject = {\r\n            name: newName,\r\n            number: newNumber   \r\n        }\r\n        \r\n        \r\n\r\n        if(person.some(p => p.name === newName)){\r\n            \r\n            let p = person.find(val => val.name === newName)\r\n            \r\n            console.log(p) \r\n            if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)){\r\n                personService\r\n                .update(p.id, personObject)\r\n                .then(returnedPerson => {\r\n                    \r\n                    setPersons(person.map(pe => pe.id !== p.id ? pe : returnedPerson))\r\n\r\n                    setSuccessMessage(\r\n                        `Persons ${returnedPerson.name} number was succesfully changed`\r\n                    )\r\n                    setTimeout(() => {\r\n                        setSuccessMessage(null)\r\n                    }, 5000)\r\n                })\r\n                .catch(error => {\r\n\r\n                    setErrorMessage(\r\n                        `Information of ${p.name} has already been removed from server`\r\n                    )\r\n                    setTimeout(() => {\r\n                        setErrorMessage(null)\r\n                    }, 5000)\r\n\r\n                    setPersons(person.filter(person => person.id !== p.id))\r\n                })\r\n            }\r\n            \r\n        }\r\n        else{\r\n            personService\r\n            .create(personObject)\r\n                .then(returnedPerson => { //Posti palauttaa tiedon siitä, mitä ollaan lähetetty ja itse response.data sisältää lähetetyt tiedot, ne palautetaan returnedPersonina ja luodaan uusi lista johon tämä lisätään\r\n                    setPersons(person.concat(returnedPerson))\r\n\r\n                    setSuccessMessage(\r\n                        `Person ${returnedPerson.name} was succesfully added`\r\n                    )\r\n                    setTimeout(() => {\r\n                        setSuccessMessage(null)\r\n                    }, 5000)\r\n                })\r\n                .catch(error => {\r\n                    console.log(error.response.data.error)\r\n                    let msg = error.response.data.error // Asetetaan serveriltä tuleva error viesti\r\n                    if(personObject.name === '' || personObject.number === '') {\r\n                        setErrorMessage(\r\n                            msg\r\n                        )\r\n                        setTimeout(() => {\r\n                            setErrorMessage(null)\r\n                        }, 5000)\r\n                    }\r\n                })\r\n\r\n            setNewName('')\r\n            setNewNumber('')\r\n        }\r\n    }\r\n\r\n    const deletePerson = (id, name) =>{\r\n        if(window.confirm(`Delete ${name}?`)){\r\n            personService\r\n            .remove(id)\r\n                .then(response => {\r\n                    \r\n                    setPersons(person.filter(p => p.id !== id)) //Lisätään uuteen listaan kaikki ne joiden id ei ole poistetun id\r\n\r\n                    setSuccessMessage(\r\n                        `Person ${name} was succesfully deleted`\r\n                    )\r\n                    setTimeout(() => {\r\n                        setSuccessMessage(null)\r\n                    }, 5000)\r\n                })\r\n                .catch(error => {\r\n\r\n                    setErrorMessage(\r\n                        `Information of ${name} has already been removed from server`\r\n                    )\r\n                    setTimeout(() => {\r\n                        setErrorMessage(null)\r\n                    }, 5000)\r\n                    setPersons(person.filter(person => person.id !== id)) //Filtteröidään uuteen listaan kaikki muut paitsi jo poistettu id\r\n                })\r\n        }\r\n    }\r\n\r\n    const handleNameChange = (event) => {\r\n        console.log(event.target.value)\r\n        setNewName(event.target.value)\r\n    }\r\n\r\n    const handleNumberChange = (event) => {\r\n        console.log(event.target.value)\r\n        setNewNumber(event.target.value)\r\n    }\r\n\r\n    const handleFilterChange = (event) => {\r\n        setNewFilter(event.target.value)\r\n    }\r\n\r\n    \r\n    return (\r\n        <div>\r\n            <h2>Phonebook</h2>\r\n            <Notification message={successMessage} />\r\n            <ErrorNotif message={errorMessage} />\r\n            <div>\r\n                Filter shown with: <input\r\n                                        value={newFilter}\r\n                                        onChange={handleFilterChange}\r\n                                    />\r\n                \r\n            </div>\r\n            \r\n            <h2>Add new</h2>\r\n            <PersonForm \r\n                onSubmit={addPerson} \r\n                valueName={newName} \r\n                valueNumber={newNumber} \r\n                onNameChange={handleNameChange} \r\n                onNumberChange={handleNumberChange} \r\n            />\r\n            <h2>Numbers</h2>\r\n            <div>\r\n                <Contacts list={person} filter={newFilter} deletePerson={deletePerson} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n"],"sourceRoot":""}